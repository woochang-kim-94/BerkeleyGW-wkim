&input_sapo
   wfng_input_file = 'wfng.pw' ! file to read DFT wavefunctions from
   wfng_aux_file = 'wfng.lo'   ! file to read auxiliary wavefunctions from
   vscg_input_file = 'vscg'    ! file to read self-consistent potential
                               ! in G-space for constructing Hamiltonian
                               ! (generated by pw2bgw.x from Quantum ESPRESSO)
   vkbg_input_file = 'vkbg'    ! file to read Kleinman-Bylander projectors
                               ! in G-space for constructing Hamiltonian
                               ! (generated by pw2bgw.x from Quantum ESPRESSO)
   wfng_output_file = 'wfng'   ! file to write generated wavefunctions to
   sapo_band_number = -1       ! number of DFT wavefunctions to use
                               ! (set to -1 to use all wavefunctions found
                               ! in wfng_input_file)
   sapo_planewave_min = 0      ! indices of the lowest and highest plane waves
   sapo_planewave_max = 0      ! to construct wavefunctions from (0 = none)
   sapo_energy_shift = 0.0     ! energy shift for PW kinetic energies (eV)
   sapo_energy_match = .false. ! match PW kinetic energies & DFT eigenvalues
   sapo_symmetry = 0           ! 0 = none, 1 = crystal, 2 = lattice symmetry
   sapo_print_ir = .false.     ! print irreducible representations of PW
   aux_flag = .false.          ! insert auxiliary wavefunctions in between PW
   aux_band_min = 0            ! minimum and maximum band indices of auxiliary
   aux_band_max = 0            ! wavefunctions (0 = all)
   aux_energy_shift = 0.0      ! energy shift for auxiliary eigenvalues (eV)
   sapo_random = 0             ! 0 = none, 1 = small variation, 2 = random
   sapo_random_ampl = 0.0      ! amplitude of the random variation
   sapo_random_norm = .false.  ! normalize randomized wavefunctions
   sapo_overlap_flag = .false. ! drop PW & AUX states that have a large
                               ! overlap with DFT states
   sapo_overlap_max = 0.0      ! maximum scalar product of PW & AUX with DFT
   sapo_orthonormal = .false.  ! orthonormalize PW & AUX wavefunctions wrt DFT
   sapo_ortho_block = 0        ! 0 = PW/AUX, 1 = AUX/PW, 2 = ordered in energy
   sapo_ortho_order = 0        ! 0 = ascending, 1 = descending order in energy
   sapo_ortho_energy = .false. ! correct PW & AUX eigenvalues by perturbative
                               ! approach during orthonormalization
   sapo_energy_sort = .false.  ! sort PW & AUX eigenvalues in ascending order
   sapo_hamiltonian = .false.  ! correct PW & AUX wavefunctions & eigenvalues
                               ! by diagonalizing subspace Hamiltonian or
                               ! by iteratively diagonalizing Hamiltonian
   sapo_ham_nrestart = 0       ! maximum number of iterative diagonalization
                               ! restarts with random initial wavefunctions
                               ! for k-points/spins that didn`t converge
   sapo_ham_ndiag = 0          ! maximum number of subspace diagonalization
                               ! steps during iterative diagonalization
   sapo_ham_ndim = 0           ! maximum number of basis functions in units
                               ! of the total number of wavefunctions,
                               ! same as diago_david_ndim in pw.x
   sapo_ham_tol = 0.0          ! tolerance on the maximum norm of residual
                               ! vectors for iterative diagonalization (Ry)
   sapo_ham_resinc = .false.   ! stop expanding the basis set and update
                               ! the wavefunctions when the maximum norm
                               ! of residual vectors starts increasing
   sapo_do_all_bands = .false. ! orthonormalize and diagonalize DFT & PW & AUX
                               ! wavefunctions or PW & AUX wavefunctions
   sapo_energy_range = .false. ! keep PW & AUX eigenvalues in the energy range
   sapo_energy_min = 0.0       ! minimum energy for PW & AUX eigenvalues (Ry)
   sapo_energy_max = 0.0       ! maximum energy for PW & AUX eigenvalues (Ry)
   sapo_check_norm = .false.   ! check orthonormality of wavefunctions
   sapo_plot_kpoint = 0        ! k-point index (0 = all) for output plots
   sapo_plot_spin = 0          ! spin index (0 = all) for output plots
   sapo_plot_bandmin = 0       ! range of band indices (0 = all) for output
   sapo_plot_bandmax = 0       ! eigenvalue, projection and amplitude plots
   sapo_plot_pwmin = 0         ! range of plane wave indices (0 = all) for
   sapo_plot_pwmax = 0         ! output projection plots
   sapo_eigenvalue = .false.   ! plot energy eigenvalues wrt band index (eV)
   sapo_projection = 0         ! plot projections of wavefunctions onto PW
                               ! 0 = none, 1 = wrt band, 2 = wrt PW, 4 = both
   sapo_amplitude = .false.    ! plot squared absolute values of amplitudes of
                               ! wavefunctions wrt kinetic energies of PW (Ry)
   sapo_ampl_num = 0           ! number of points on the kinetic energy scale
   sapo_ampl_del = 0.0         ! separation between the adjacent points (Ry)
   sapo_ampl_brd = 0.0         ! broadening for wavefunction amplitudes (Ry)
/
